import React, { Fragment, Component } from "react";

/* Import Error Boundary */

import ErrorBoundary from "./components/utils/errorBoundary";

/* Import Modals */

import CalendarDateSettingsModal from "./components/modals/calendarModule/calendarDateSettingsModal";
import ConfirmationModal from "./components/modals/calendarModule/confirmationModal";

import ETGMLaunchGroupModal from "./components/modals/existingTabGroupsModule/etgmLaunchGroupModal";
import ETGMRemoveGroupModal from "./components/modals/existingTabGroupsModule/etgmRemoveGroupModal";
import ETGMCreateOrEditGroupModal from "./components/modals/existingTabGroupsModule/etgmCreateOrEditGroupModal";

import COTMRemoveUnresponsiveTabsModal from "./components/modals/currentlyOpenedTabsModule/cotmRemoveUnresponsiveTabsModal";
import COTMRemoveWindowModal from "./components/modals/currentlyOpenedTabsModule/cotmRemoveWindowModal";
import COTMRemoveTabModal from "./components/modals/currentlyOpenedTabsModule/cotmRemoveTabModal";

import ErrorOverlay from "./components/modals/errorOverlay";

/* Import Routes */
import RouteList from "./components/routes/routeList";

/* Import Sidebars */
import MainNavBar from "./components/sidebars/mainNavBar/mainNavBar";

/* Import Utilities */
import FullWidthLoadbar from "./components/utils/fullWidthLoadbar";

/* Import Footer */
import ViewFooter from "./components/views/components/viewFooter";

/* Import CSS generated by create-react-app */
import "./styles/react-generated/App.css";

/* Import Tabeon app specific CSS */
import "./styles/tabeon/style.css";

import AppContext from "./components/contexts/AppContextProvider";

class App extends Component {
  static contextType = AppContext;

  render = () => {
    // Get context

    const { getValueFromState } = this.context;

    const modalData = getValueFromState("modal");
    const errors = getValueFromState("errors");
    const routes = getValueFromState("routes");

    const { id: modalId } = modalData;
    return (
      <Fragment>
        <ErrorBoundary>
          {modalId === "confirm-action" && (
            <ConfirmationModal data={modalData}></ConfirmationModal>
          )}
          {modalId === "date-settings" && (
            <CalendarDateSettingsModal
              data={modalData}
            ></CalendarDateSettingsModal>
          )}
          {modalId === "etgmlaunchgroupmodal" && (
            <ETGMLaunchGroupModal data={modalData}></ETGMLaunchGroupModal>
          )}
          {modalId === "etgmremovegroupsmodal" && (
            <ETGMRemoveGroupModal data={modalData}></ETGMRemoveGroupModal>
          )}
          {modalId === "etgmcreateoreditgroupmodal" && (
            <ETGMCreateOrEditGroupModal
              data={modalData}
            ></ETGMCreateOrEditGroupModal>
          )}
          {modalId === "cotmremoveunresponsivetabsmodal" && (
            <COTMRemoveUnresponsiveTabsModal
              data={modalData}
            ></COTMRemoveUnresponsiveTabsModal>
          )}
          {modalId === "cotmremovewindowmodal" && (
            <COTMRemoveWindowModal data={modalData}></COTMRemoveWindowModal>
          )}
          {modalId === "cotmremovetabmodal" && (
            <COTMRemoveTabModal data={modalData}></COTMRemoveTabModal>
          )}
          {errors.length > 0 && <ErrorOverlay data={errors}></ErrorOverlay>}

          <div className="container-fluid">
            <MainNavBar routes={routes} />
            <div className="row">
              <div className="col-md-12" id="tabeon-view-container">
                <RouteList />
                <ViewFooter />
              </div>
            </div>
          </div>
          <FullWidthLoadbar
            refreshFactor={getValueFromState("refreshFactor")}
          />
        </ErrorBoundary>
      </Fragment>
    );
  };
}

export default App;
