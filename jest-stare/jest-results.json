{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 1,
  "numPassedTests": 1041,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 1,
  "numTotalTests": 1041,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1587835996302,
  "success": true,
  "testResults": [
    {
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 1041,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "perfStats": {
        "end": 1587836020451,
        "start": 1587836001733
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "D:\\MAMP\\htdocs\\github\\tabeon\\src\\_tests\\App.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Test <App /> component behaviour at mount"
          ],
          "duration": 22,
          "failureMessages": [],
          "fullName": "Test <App /> component behaviour at mount The state is correctly preset according to template with no modifications, when no functions change the state at mount",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "The state is correctly preset according to template with no modifications, when no functions change the state at mount"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(\"Test string\", false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(\"Test string\", false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(5, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(5, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(true, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(true, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(null, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(null, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(undefined, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(undefined, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState([\"abcd\", 48, false, undefined, null, () => {}, {testkey: \"value\"}, [48, 22, 5.47]], false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState([\"abcd\", 48, false, undefined, null, () => {}, {testkey: \"value\"}, [48, 22, 5.47]], false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState(() => {}, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(() => {}, false): this.launchErrorOverlay() should be called once, because \"newProps\" is not an object."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false): this.setState(testParam_newProps) should be called because \"newProps\" is an object, and \"callback\" parameter being undefined.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false): this.setState(testParam_newProps) should be called because \"newProps\" is an object, and \"callback\" parameter being undefined."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({ key1: 1, key2: \"hello\", key3: false }, false): this.setState(testParam_newProps) should be called because \"newProps\" is an object, and \"callback\" parameter being undefined.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({ key1: 1, key2: \"hello\", key3: false }, false): this.setState(testParam_newProps) should be called because \"newProps\" is an object, and \"callback\" parameter being undefined."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, () => {}): this.setState(testParam_newProps, testParam_callback) should be called because \"newProps\" is an object, and \"callback\" is a function.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, () => {}): this.setState(testParam_newProps, testParam_callback) should be called because \"newProps\" is an object, and \"callback\" is a function."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({ key1: 1, key2: \"hello\", key3: false }, false, () => {}): this.setState(testParam_newProps, testParam_callback) should be called because \"newProps\" is an object, and \"callback\" is a function.",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({ key1: 1, key2: \"hello\", key3: false }, false, () => {}): this.setState(testParam_newProps, testParam_callback) should be called because \"newProps\" is an object, and \"callback\" is a function."
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, \"test\"): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, \"test\"): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, 380): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, 380): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, true): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, true): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, null): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, null): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, { testobjectname: \"Just passing by\", age: 20 }): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, { testobjectname: \"Just passing by\", age: 20 }): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Run updateState({}, false, [\"testarray\", 14]): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, [\"testarray\", 14]): this.launchErrorOverlay() should be called because \"newProps\" is an object, but \"callback\" is neither a function nor undefined"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, \"test string\"): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, \"test string\"): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, 22): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, 22): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, null): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, null): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, [true, false, 12]): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, [true, false, 12]): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, { testkey: \"test string input\" }): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, { testkey: \"test string input\" }): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-101\") is thrown, when \"newProps\" is an object containing anything (excluding array) AND \"callback\" is neither a function nor undefined Run updateState({}, false, true): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState({}, false, true): ExceptionsHandler.ValidatorError(\"app-101\") should be called because \"callback\" is neither a function nor undefined, while \"newProps\" being an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState(12, false): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(12, false): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState(\"test string\", false, () => {}): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(\"test string\", false, () => {}): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState(true, false, \"test string input\"): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(true, false, \"test string input\"): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState(null, false, 30): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(null, false, 30): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState(undefined, false, true): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState(undefined, false, true): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component updateState(newProps, showLoadbar, callback): Test this method with various typeof inputs as \"newProps\". Only call this.setState() if the \"newProps\" parameter is an object (excluding arrays), AND if the \"callback\" parameter is a function or undefined. The \"showLoadbar\" parameter does not affect what function gets called Check that the error ExceptionsHandler.ValidatorError(\"app-102\") is thrown, when \"newProps\" is not an object, regardless of the \"callback\" parameter Run updateState([12, 20], false, true): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run updateState([12, 20], false, true): ExceptionsHandler.ValidatorError(\"app-102\") should be called because \"newProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(\"test string\"): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(\"test string\"): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(30): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(30): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(true): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(true): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(false): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(false): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation([\"donald duck\", \"mickey mouse\", 5, false]): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation([\"donald duck\", \"mickey mouse\", 5, false]): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(null): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(null): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(undefined): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(undefined): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Check that the error ExceptionsHandler.ValidatorError(\"app-104\") is thrown, if \"viewProps\" is not an object Run handleNavigation(): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation(): ExceptionsHandler.ValidatorError(\"app-104\") should be called, because \"viewProps\" is not an object"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: \"test string for view data\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: 30 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: \"test string for meta data\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: \"test string for refreshFactor\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: \"test string for refreshFactor\" }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: [\"darkwing duck\", \"simba\", false, 247] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: [\"darkwing duck\", \"simba\", false, 247] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: {\"testObj3\": \"contents of test object 3\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: {\"testObj3\": \"contents of test object 3\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\")."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Run handleNavigation({ refreshFactor: {\"anotherTestObj4\": \"test string\", \"anotherTestObj5\": [Function anotherTestObj5], \"imagination1\": 0, \"testObj32\": \"contents of test object 3\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ refreshFactor: {\"anotherTestObj4\": \"test string\", \"anotherTestObj5\": [Function anotherTestObj5], \"imagination1\": 0, \"testObj32\": \"contents of test object 3\"} }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: test string for meta data }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 8,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: 45 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: daisy duck,goofy,52,true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 8,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"metaData\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, metaData: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 8,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: \"test string for view data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: [\"tiger\", \"winnie\", 5, false], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"testObj1\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ viewData: {\"anotherTestObj\": 41, \"testObj4\": \"contents of test object 1\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: \"test string for meta data\", refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: 45, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [\"daisy duck\", \"goofy\", 52, true], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"testObj2\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format."
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should not get called since \"viewProps\" does not contain all valid keys in correct format. Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: {\"anotherTestObj2\": false, \"anotherTestObj3\": null, \"testObj21\": \"contents of test object 2\"}, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called, because \"viewProps\" does not contain all valid keys (valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number))"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: test string for meta data, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: 45, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 14,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: false, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 8,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: daisy duck,goofy,52,true, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 8,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: null, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: undefined, viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: test string for view data, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: 30, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: true, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: tiger,winnie,5,false, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: null, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: 14 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: undefined, refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: test string for refreshFactor }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: true }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: false }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: darkwing duck,simba,false,247 }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: null }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: undefined }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({ metaData: [object Object], viewData: [object Object], refreshFactor: [object Object] }): ExceptionsHandler.ValidatorError(\"app-103\") should be called. There are correct keys in the \"viewProps\" object, but one or more of their values are in wrong format"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 21, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 21, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 17, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 17, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 85, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 85, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 61, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 61, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 18, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"refreshFactor\": 18, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"randomKey1\": [Object], \"randomKey2\": [Function randomKey2], \"randomKey3\": [Array], \"randomKey4\": false, \"refreshFactor\": 28, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"randomKey1\": [Object], \"randomKey2\": [Function randomKey2], \"randomKey3\": [Array], \"randomKey4\": false, \"refreshFactor\": 28, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"randomKey1\": null, \"randomKey2\": true, \"randomKey3\": [Array], \"randomKey4\": [Function randomKey4], \"refreshFactor\": 42, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"randomKey1\": null, \"randomKey2\": true, \"randomKey3\": [Array], \"randomKey4\": [Function randomKey4], \"refreshFactor\": 42, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        },
        {
          "ancestorTitles": [
            "<App />: Unit test of individual methods located in this component",
            "Test handleNavigation(viewProps)",
            "Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\").",
            "Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "<App />: Unit test of individual methods located in this component Test handleNavigation(viewProps) Test this method using various non-array objects as \"viewProps\". The objects should vary to cover as many permutations as possible. this.updateState() should get called only if the \"viewProps\" object contains all valid keys (all valid keys being \"viewData\" (object), \"metaData\" (object) and \"refreshFactor\" (number)). Otherwise, throw ExceptionsHandler.ValidatorError(\"app-103\"). Test various combinations of \"metaData\", \"viewData\" and \"refreshFactor\" provided by \"viewProps\". this.updateState() should get called only if \"metaData\" and \"viewData\" are non-array objects AND refreshFactor is a number Run handleNavigation({\"metaData\": [Object], \"randomKey1\": false, \"randomKey2\": [Array], \"randomKey3\": 248, \"randomKey4\": [Array], \"refreshFactor\": 94, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Run handleNavigation({\"metaData\": [Object], \"randomKey1\": false, \"randomKey2\": [Array], \"randomKey3\": 248, \"randomKey4\": [Array], \"refreshFactor\": 94, \"viewData\": [Object]}): this.updateState() should be called, because \"viewProps\" contains \"viewData\" (non-array object), \"metaData\" (non-array object) and \"refreshFactor\" (number)"
        }
      ],
      "skipped": false,
      "leaks": false
    }
  ],
  "wasInterrupted": false
}